##### DSGN 160 Project Code #####

install.packages("dplyr")
install.packages("ggplot2")
install.packages("sampling")
library(dplyr)
library(ggplot2)
library(sampling)

project_data <- read.csv("synthetic_experiment_data_group_yakovlev.csv")

project_data$Group[project_data$Group=="control"] <- "0"
project_data$Group[project_data$Group=="treatment 1"] <- "1"
project_data$Group[project_data$Group=="treatment 2"] <- "2"
project_data$Group[project_data$Group=="treatment 3"] <- "3"

head(project_data)

# 1. Bar plot comparing average cancellation to buffer times
#   Calculate average cancellation rate for each buffer time
avg_cancel_buffer <- aggregate(cancellation ~ BufferTimePercentage, data = project_data, FUN = mean)

ggplot(data = avg_cancel_buffer, aes(x = BufferTimePercentage, y = cancellation)) +
  geom_bar(stat = "identity", fill = "skyblue")

# 2. Avg satisfaction between buffer groups
#   Calculate average satisfaction rate for each buffer time
avg_satisfaction_buffer <- aggregate(satisfaction ~ BufferTimePercentage, data = project_data, FUN = mean)

ggplot(data = avg_satisfaction_buffer, aes(x = BufferTimePercentage, y = satisfaction)) +
  geom_bar(stat = "identity", fill = "sandybrown")

# 3. Barplot showing customer's frequency and satisfaction
# Returns new dataframe grouped by customerID, calculates frequency of each customer
customer_frequency <- project_data %>%
  group_by(customerID) %>%
  summarise(Frequency = n())

# Returns new dataframe where each customerID from customer_frequency has information from original data frame
customer_data <- inner_join(customer_frequency, project_data, by = "customerID")

ggplot(data = customer_data, aes(x = Frequency, y = satisfaction)) +
  geom_bar(stat = "identity", fill = "coral")
